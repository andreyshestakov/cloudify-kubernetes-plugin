## kubectl delete deploy monitoring-influxdb --namespace kube-system
## kubectl delete sa heapster --namespace kube-system
## kubectl delete services monitoring-influxdb  --namespace kube-system


tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-kubernetes-plugin/rbac-support/plugin.yaml

inputs:

  kubernetes-admin_client_key_data:
    default: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzM4aWdVVzVFRjRsY1JSR1IzZ2M2VW50YWtNcGo1K2RxYzJCaGV0TDg5c29UN04yCm1pa2xPUnVTcDY5RXN1RytPYkV2d1hJMmZYRmZqWXE3S2dZa0UyMm9LMlhZb01vYlJwQVVEMXYxblRPVFJxUzIKNVRYVWhVRFV6VzliRUZmQ0RBWGd0NGRSWkZic2xWc09aVnhsa29aWHYzSnY5bGw2NjVNR01HWm4yOUd6dkxSZApjZlpzVG1NTDVvTGo0UWtGckdnNHpKNHpSVU1WSSs4Z0Yya1hiOVpjMUFjN1FMT0pKcmUvNCt5aUNISHNXVGlECnBWWWZsWEpDQzF4Y1MwUEFuMG1jMDlKbjdTeXNwRE5HeHRqWklFTTVhMW9NUEtFaElUSEFWL0NyT1hRVnZJTjIKWHgzTS9TZG9ZTzhPWlh0aHMzam5DU3I2cnVueWxPMnVNTnljWVFJREFRQUJBb0lCQUdSTFZ4Sm5DTGlDOUVaOQpGa2tZTUF6bkptdjdwTmpRRkh6R3Q0cFMycFp5ZXMzWXppSHN0ZklFV1VxNXVrN2pUVW9md3RaRmwvcm5MUlJhCmRnYnJPNXJVQ1JDcW9XWnNDVzQ4QUc2WXlQc3JPSVZuZjRVOEJwbU9WeDVGNEx3VHFiT3RXRW9QbkF3VUpDL0QKbFRFZkkrVDJFeEplelYzZkxoYXBTT1dQdy95YlJSY3NHTk5zYzdPYjJaOTh0Q2RZcjcxVysyWjdDUC9makZUZQpPcEJ6Z1YxL3h1L2tTRWxvUWE4SU5tVEhpbWR3WFZ5RFlCM3dMQStBOVMyWUNJQVV3OEF1SmNTSnFhbFB5eXl5CjhFT1pxRzNHTVFhRnhlS29DSFN4L1FQNWtNQTd6TkdXczNqa0Z5cVZXci9iTHpWUWJBVmZQUThEMmdtNTBsL3IKTlBJd1pJRUNnWUVBMXZwU3Zqd2g0Ym5hdlNxRnp2eGtTVGpFWlllbnpzeHBpbjM3S1cyQjVuc2V0dmdDaVVIaQphTTlwSVhDbFJBY2pSU01WTUl1YXNNbnNzSjdRdjZ4QTNpdjZOeU5YMy9yY3oxNWhpbXozcWdDYlQvcE1yVTR4CitCRUlYZE5sSUVmQVYrS3g1L3BxSFZ3K1VNMTJpYTRwNjMzS0w3ZEYxRnVxWm13RzhrM2RQN2tDZ1lFQTZNMG4KWDlXZjI5SmdsVTUzSnlxZ0pPcWNuZUk0VWFpT0tTdDc4SlVkdldITmpzNThpZzNyUjZwY3NiRHNOOFpxQ3Q5MApNa1lldEhkVk9wTGxVZWs5SGtKaUNXNmk5YzllR1ZRbDZOUU9Ncnl2QUltSWNRRC9lQWZYL2lKZGJTeTQzWTk2CmdSSmxyK21xb2FQbkJWUTdTMjk2bGtINWpDRGY2Z00rem91M0Jla0NnWUVBbnE5NGxHUGV2cmhwOW1pRkRSelIKQ2h1VkhUemRhWkVKOXVpM2xRVDRkaUU3c3VPdk81SWVoaTlUOHhNcmF1TzU3VGJRVlYwM2VuZ1M5dXpFT2pmMApTZ3M4VDZjUEhvNFdvQnVTOUpNcTNacEZDdXcvM1UxekpTR3RnMVNmdVF3OXRxSG5vTXovdDF4M3d6MW0yb3BzCjl4K0xOMTJaZGYrVDhMYWRDZzdmMmtFQ2dZRUFpVEoybFAwUncvdjgzYUVyaVpLT1pKTTdqN1NGV21LS3ZXcWEKRlZQYi9nTklvSFBDWTU0R1hlcmh5L3FuaTh0TUxYSTVTWE9YbnVXQS9nOGFSS2EvVlRqc0RBRCsydnpGeVFtVgplZHlYTFlHVFpTNm9rV2gwSm1vQStnMkluOUd1ZFN5Y2xycWY0UWRGZnhOWUVBVHZHT3J2Qk9TR3kvV0g0S0xlCi9kekxGUmtDZ1lBQ05odEkzR1dGSmppOW1WYmw5YzU5T1Q2MFVjZnc4UlRmbGFjSlV6MGxVNDdxbjdBcVNLU3gKOERoZEhqQlFQMXFKM1hDYUtVMW1VOGFQdUxuL3gyeXFPdTVsOERzcHNuZnVPVEI3Wm1GSlcyTk9pQlhWQ1RuSAp6NXkzb2ZuV1lhaVhjM1puNmpGSUNDNjF0K2Z1QjZhajM2QXJzUU5xRitRaVNZNHkrUEdJQWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

  kubernetes_master_ip:
    default: 172.16.168.167

  kubernetes_master_port:
    default: 6443

  kubernetes-admin_client_certificate_data:
    default: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4akNDQWRxZ0F3SUJBZ0lJTWtPSEQzb1piTEV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB4TnpFeU1USXhORFF4TkRsYUZ3MHhPREV5TVRJeE5EUXhOVEphTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXczOGlnVVc1RUY0bGNSUkcKUjNnYzZVbnRha01wajUrZHFjMkJoZXRMODlzb1Q3TjJtaWtsT1J1U3A2OUVzdUcrT2JFdndYSTJmWEZmallxNwpLZ1lrRTIyb0syWFlvTW9iUnBBVUQxdjFuVE9UUnFTMjVUWFVoVURVelc5YkVGZkNEQVhndDRkUlpGYnNsVnNPClpWeGxrb1pYdjNKdjlsbDY2NU1HTUdabjI5R3p2TFJkY2Zac1RtTUw1b0xqNFFrRnJHZzR6SjR6UlVNVkkrOGcKRjJrWGI5WmMxQWM3UUxPSkpyZS80K3lpQ0hIc1dUaURwVllmbFhKQ0MxeGNTMFBBbjBtYzA5Sm43U3lzcERORwp4dGpaSUVNNWExb01QS0VoSVRIQVYvQ3JPWFFWdklOMlh4M00vU2RvWU84T1pYdGhzM2puQ1NyNnJ1bnlsTzJ1Ck1OeWNZUUlEQVFBQm95Y3dKVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGL3JjOVI4V0R4TEt5enlFcVNmNVNWQ0gzQjJySWU2WmViUAoydzRUYTB0QW5nbnlkYzJ2V2dQdC9DU2hFVS9HZFlqdHpERXF0eHkvKzJmdEY3dmcxSWFncnQvc2xDZFpNZHY3ClFUSUowdWV5NTJDOW5oUzBLUEhQcDQ5bTR5dEdhcVlIWE4rOGdiUWd3OE5yWHVGdDZaK2NMMDRHbmdhYytISGQKMmpnSUwyVDVKRnVXS1J6Z3E5bkY4c012ZnNEdDRBcHV0RkxMWFF1OVoyVFhNNnJuQVJHakJRRlZmRUJSb2pjMAptNllRNzRnV3l0UWd6TkVGVE9tSWRCVWUrejJ3OWtLOEc1NDlHdnREemxlWFpVdFd4Y3pvSGQ4OXFUY0UrcWo1CjNhMStuNWs5bXNadFhqUjFaVVJpcnZPeDB6VnhYcnQxN3NHMlRJVExlNVpibGtjdTFCVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=

  kubernetes_certificate_authority_data:
    default: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFM01USXhNakUwTkRFME9Wb1hEVEkzTVRJeE1ERTBOREUwT1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnBVCkIvMDNELytjUFptR3BnTUdzUk85UDNVakNkTUNnTWFaVFViLzZVYzdyOTNyMWwyaEd5NE12Qys2OWtJUFV2ZjgKR1oxNXIzS3l2aDhwcS9PM2RVdzZpcXFsRmZzcHdERndINlcvZWJxeWlISEswWC9TUVZLTzJyUkJxVmRYcmFhSgovaHkwbnlSMk9HSW1HQk1Cc3lDc0R1Z0tBVmptcUxyVzBzam5nSGd6TkFCYVFhWkV0YWp3cHJTVi9qbng2dGRqCjVZQWZsN2toU3pSL0hOTS9UcG9MdVhJYytnMXFYUlFYNHFmb0ZZakpESTdVb016Qm0vL1dsbWY1Y2ZQdkdzZkEKMC9jazhqNU9nTXN4YytxVHlzb1BwODhxNzRCcGJON3NMTVh2ZlQ1UmZOSW9pK3hqMURndWlhTWJzRUsvd2N1TQpSOHo2Qkx2M0I3UG91bERiRUFjQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKU01lWWQ0TFlUdTJqSEpoSXRGS0NYVW0vSnkKSDVwcmFaOEF0OS9vS2VGSnVjZi9Xd29CS0ZTWnBKY01qN1J5dlVVemttU0hwRFVhUVdSTWJ3S2pFTS9HWmZqdAphbTVpZ0c0VUpwNVhZczVRdDk1ZGVSbXJGbVFZcHNnWFZXbExYbU5DV0FOYWVPUHhBVm9CK3ZLYUhURzA1MzRZCk5pdG9OY0l2RVdXVVcxSlNvdzZZREJ4T0h3b0pYQmV0eWV5YjdMcDRsbjlSb3pkbVhLOXpiTzBqTGlOOWpVMXoKbTI1bkhydXZYWWlnbXVlNFU1MXU2RXNBS095RUp1RzgxRzR0QkFMYmJZdE0zRWVpS2c2aFpENzlnTzZQVVdVVwp0dW5BTEJkS1haR3FIRlhqUEZ1cWFVRmY4RXVrOG9QbCthOVFPcDN3NFlZaEhodUczQjEreWQ0SVgrYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=


node_templates:

  kube:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration:
        file_content:
          apiVersion: v1
          kind: Config
          preferences: {}
          current-context: kubernetes-admin@kubernetes
          clusters:
          - name: kubernetes
            cluster:
              certificate-authority-data: { get_input: kubernetes_certificate_authority_data }
              server: { concat: [ 'https://', { get_input: kubernetes_master_ip}, ':', { get_input: kubernetes_master_port } ] }
          contexts:
          - name: kubernetes-admin@kubernetes
            context:
              cluster: kubernetes
              user: kubernetes-admin
          users:
          - name: kubernetes-admin
            user:
              client-certificate-data: { get_input: kubernetes-admin_client_certificate_data }
              client-key-data:  { get_input: kubernetes-admin_client_key_data }

  influx_deployment:
    type: cloudify.kubernetes.resources.Deployment
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: monitoring-influxdb
          namespace: kube-system
        spec:
          replicas: 1
          template:
            metadata:
              labels:
                task: monitoring
                k8s-app: influxdb
            spec:
              containers:
              - name: influxdb
                image: gcr.io/google_containers/heapster-influxdb-amd64:v1.3.3
                volumeMounts:
                - mountPath: /data
                  name: influxdb-storage
              volumes:
              - name: influxdb-storage
                emptyDir: {}
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube

  influx_service:
    type: cloudify.kubernetes.resources.Service
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            task: monitoring
            # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
            # If you are NOT using this as an addon, you should comment out this line.
            kubernetes.io/cluster-service: 'true'
            kubernetes.io/name: monitoring-influxdb
          name: monitoring-influxdb
          namespace: kube-system
        spec:
          ports:
          - port: 8086
            targetPort: 8086
          selector:
            k8s-app: influxdb
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube
    - type: cloudify.relationships.depends_on
      target: influx_deployment

  grafana_deployment:
    type: cloudify.kubernetes.resources.Deployment
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: monitoring-grafana
          namespace: kube-system
        spec:
          replicas: 1
          template:
            metadata:
              labels:
                task: monitoring
                k8s-app: grafana
            spec:
              containers:
              - name: grafana
                image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.3
                ports:
                - containerPort: 3000
                  protocol: TCP
                volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: ca-certificates
                  readOnly: true
                - mountPath: /var
                  name: grafana-storage
                env:
                - name: INFLUXDB_HOST
                  value: monitoring-influxdb
                - name: GF_SERVER_HTTP_PORT
                  value: "3000"
                  # The following env variables are required to make Grafana accessible via
                  # the kubernetes api-server proxy. On production clusters, we recommend
                  # removing these env variables, setup auth for grafana, and expose the grafana
                  # service using a LoadBalancer or a public IP.
                - name: GF_AUTH_BASIC_ENABLED
                  value: "false"
                - name: GF_AUTH_ANONYMOUS_ENABLED
                  value: "true"
                - name: GF_AUTH_ANONYMOUS_ORG_ROLE
                  value: Admin
                - name: GF_SERVER_ROOT_URL
                  # If you're only using the API Server proxy, set this value instead:
                  # value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/
                  value: /
              volumes:
              - name: ca-certificates
                hostPath:
                  path: /etc/ssl/certs
              - name: grafana-storage
                emptyDir: {}
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube
    - type: cloudify.relationships.depends_on
      target: influx_service

  grafana_service:
    type: cloudify.kubernetes.resources.Service
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
            # If you are NOT using this as an addon, you should comment out this line.
            kubernetes.io/cluster-service: 'true'
            kubernetes.io/name: monitoring-grafana
          name: monitoring-grafana
          namespace: kube-system
        spec:
          # In a production setup, we recommend accessing Grafana through an external Loadbalancer
          # or through a public IP.
          # type: LoadBalancer
          # You could also use NodePort to expose the service at a randomly-generated port
          # type: NodePort
          ports:
          - port: 80
            targetPort: 3000
          selector:
            k8s-app: grafana
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube
    - type: cloudify.relationships.depends_on
      target: grafana_deployment

  heapster_service_account:
    type: cloudify.kubernetes.resources.CustomBlueprintDefinedResource
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: heapster
          namespace: kube-system
      api_mapping:
        create:
          api: CoreV1Api
          method: create_namespaced_service_account
          payload: V1ServiceAccount
        read:
          api: CoreV1Api
          method: read_namespaced_service_account
        delete:
          api: CoreV1Api
          method: delete_namespaced_service_account
          payload: V1DeleteOptions
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube

  heapster_deployment:
    type: cloudify.kubernetes.resources.Deployment
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: heapster
          namespace: kube-system
        spec:
          replicas: 1
          template:
            metadata:
              labels:
                task: monitoring
                k8s-app: heapster
            spec:
              serviceAccountName: heapster
              containers:
              - name: heapster
                image: gcr.io/google_containers/heapster-amd64:v1.4.0
                imagePullPolicy: IfNotPresent
                command:
                - /heapster
                - --source=kubernetes:https://kubernetes.default
                - --sink=influxdb:http://monitoring-influxdb.kube-system.svc:8086
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube
    - type: cloudify.relationships.depends_on
      target: grafana_service
    - type: cloudify.relationships.depends_on
      target: heapster_service_account

  heapster_service:
    type: cloudify.kubernetes.resources.Service
    properties:
      options:
        namespace: kube-system
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            task: monitoring
            # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
            # If you are NOT using this as an addon, you should comment out this line.
            kubernetes.io/cluster-service: 'true'
            kubernetes.io/name: Heapster
          name: heapster
          namespace: kube-system
        spec:
          ports:
          - port: 80
            targetPort: 8082
          selector:
            k8s-app: heapster
    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kube
    - type: cloudify.relationships.depends_on
      target: heapster_deployment

#  heapster_rbac:
#    type: cloudify.nodes.ApplicationServer
#    interfaces:
#    interfaces:
#      cloudify.interfaces.lifecycle:
#        create:
#          implementation: scripts/cfy_autoscale/heapster_rbac.py
#    relationships:
#    - target: kubemanager
#      type: cloudify.relationships.contained_in
#    - type: cloudify.relationships.depends_on
#      target: heapster_service
